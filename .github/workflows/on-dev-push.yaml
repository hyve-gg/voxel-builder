name: On Push to Dev
on:
  workflow_dispatch:
  push:
    branches: ["dev"]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-2
            
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}
        run: |
          docker build -t $ECR_REGISTRY/voxel-builder-dev:latest .
          docker push $ECR_REGISTRY/voxel-builder-dev:latest

      - name: Configure Kubernetes client
        uses: silverlyra/setup-aws-eks@v0.1
        with:
          cluster: dev-eks-cluster

      - name: Deploy service
        run: |
          ls -l
          kubectl apply -f ./k8s/dev/pvc.yaml
          kubectl apply -f ./k8s/dev/deployment.yaml
          kubectl apply -f ./k8s/dev/service.yaml
          kubectl rollout restart -f ./k8s/dev/deployment.yaml